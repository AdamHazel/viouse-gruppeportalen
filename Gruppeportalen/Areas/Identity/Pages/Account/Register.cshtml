@page
@model RegisterModel

@{
ViewData["Title"] = "VIO";
}

<link rel="stylesheet" href="~/css/register.css" />

<div class="center-container">
<h1>@ViewData["Title"]</h1>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="form-container">
            <form id="registerForm" method="post">
                <input asp-for="Input.TypeOfUser" type="hidden" id="typeOfUser"/>
                <input asp-for="Input.UserId" type="hidden" id="userId"/>

                <h2>Opprett en konto</h2>
                <hr/>
                <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>

                <!-- Basic Registration Fields -->
                <div class="form-floating mb-3">
                    <input asp-for="Input.Email" class="form-control" placeholder="name@example.com" id="email"/>
                    <label asp-for="Input.Email">E-post</label>
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Password" class="form-control" placeholder="Password" type="password" id="password"/>
                    <label asp-for="Input.Password">Passord</label>
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.ConfirmPassword" class="form-control" placeholder="Confirm Password" type="password" id="confirm-password"/>
                    <label asp-for="Input.ConfirmPassword">Bekreft passord</label>
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>

                <!-- User Type Selection -->
                <div class="mb-3 text-center">
                    <button type="button" class="custom-orange-btn" onclick="registerUser('PrivateUser')">Registrer privat bruker</button>
                    <button type="button" class="custom-orange-btn" onclick="registerUser('CentralOrganisation')">Registrer organisasjon</button>
                </div>

                <!-- Confirmation Message -->
                <div id="confirmationMessage" style="display: none; font-weight: bold;">
                    En bekreftelse har blitt sendt til e-mailen din. Vennligst sjekk innboksen din. Husk å sjekke søppelposten om du ikke finner den i innboksen.
                </div>

                <!-- Private User Fields -->
                <div id="privateForm" style="display:none;">
                    <div class="form-floating mb-3">
                        <input asp-for="Input.Firstname" class="form-control" placeholder="Fornavn" id="firstname"/>
                        <label asp-for="Input.Firstname">Fornavn</label>
                        <span asp-validation-for="Input.Firstname" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Input.Lastname" class="form-control" placeholder="Etternavn" id="lastname"/>
                        <label asp-for="Input.Lastname">Etternavn</label>
                        <span asp-validation-for="Input.Lastname" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Input.DateOfBirth" class="form-control" type="date" placeholder="Født" id="dob"/>
                        <label asp-for="Input.DateOfBirth">Fødselsdato</label>
                        <span asp-validation-for="Input.DateOfBirth" class="text-danger"></span>
                    </div>
                    <small class="text-muted">Hvis du ikke har et norsk mobilnummer, vennligst inkluder landskoden din.</small>
                    <div class="form-floating mb-3">
                        <input asp-for="Input.Telephone" class="form-control" placeholder="Mobil" id="telephone"/>
                        <label asp-for="Input.Telephone">Mobil</label>
                        <span asp-validation-for="Input.Telephone" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Input.Address" class="form-control" placeholder="Adresse" id="address"/>
                        <label asp-for="Input.Address">Adresse</label>
                        <span asp-validation-for="Input.Address" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Input.City" class="form-control" placeholder="Sted" id="city"/>
                        <label asp-for="Input.City">By</label>
                        <span asp-validation-for="Input.City" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Input.Postcode" class="form-control" placeholder="Postnummer" id="postcode"/>
                        <label asp-for="Input.Postcode">Postnummer</label>
                        <span asp-validation-for="Input.Postcode" class="text-danger"></span>
                    </div>
                    <button type="button" class="custom-orange-btn" onclick="completePrivateUserRegistration()">Fullfør registrering</button>
                </div>

                <!-- Organization User Fields -->
                <div id="organizationForm" style="display:none;">
                    <div class="form-floating mb-3">
                        <input asp-for="Input.OrganisationNumber" class="form-control" placeholder="Organisasjonsnummer" id="org-number"/>
                        <label asp-for="Input.OrganisationNumber">Organisasjonsnummer</label>
                        <span asp-validation-for="Input.OrganisationNumber" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Input.OrganisationName" class="form-control" placeholder="Organisasjonsnavn" id="org-name"/>
                        <label asp-for="Input.OrganisationName">Navn på organisasjon</label>
                        <span asp-validation-for="Input.OrganisationName" class="text-danger"></span>
                    </div>
                    <button type="button" class="custom-orange-btn" onclick="completeOrganizationUserRegistration()">Fullfør registrering</button>
                </div>
            </form>
        </div>
    </div>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
</div>

@section Scripts {
<partial name="_ValidationScriptsPartial"/>
<script>
    function registerUser(userType) {
        document.getElementById('typeOfUser').value = userType;

        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;
        const confirmPassword = document.getElementById('confirm-password').value;

        if (password !== confirmPassword) {
            alert("Passwords do not match!");
            return;
        }

        const formData = new URLSearchParams(new FormData(document.getElementById('registerForm')));

        fetch('/Identity/Account/RegisterPartial', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: formData.toString()
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById('userId').value = data.userId;
                    
                    document.getElementById('confirmationMessage').style.display = 'block';

                    // Show additional form fields based on user type
                    if (userType === 'PrivateUser') {
                        document.getElementById('privateForm').style.display = 'block';
                        document.getElementById('organizationForm').style.display = 'none';
                    } else {
                        document.getElementById('organizationForm').style.display = 'block';
                        document.getElementById('privateForm').style.display = 'none';
                    }
                } else {
                    alert(data.errors.join("\n") || "An error occurred");
                }
            })
            .catch(error => {
                console.error("Unexpected error:", error);
                alert("An unexpected error occurred: " + error.message);
            });
    }


    function completePrivateUserRegistration() {
        const formData = new URLSearchParams(new FormData(document.getElementById('registerForm')));
        fetch('/Identity/Account/RegisterPrivateUser', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: formData.toString()
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    //alert("Registration completed successfully!");
                    window.location.href = "/Home";
                } else {
                    alert(data.errors.join("\n"));
                }
            })
            .catch(error => {
                console.error("Unexpected error:", error);
                alert("An unexpected error occurred: " + error.message);
            });
    }

    function completeOrganizationUserRegistration() {
        const formData = new URLSearchParams(new FormData(document.getElementById('registerForm')));
        fetch('/Identity/Account/RegisterOrganizationUser', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: formData.toString()
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    //alert("Registration completed successfully!");
                    window.location.href = "/Home";
                } else {
                    alert(data.errors.join("\n"));
                }
            })
            .catch(error => {
                console.error("Unexpected error:", error);
                alert("An unexpected error occurred: " + error.message);
            });
    }

    function confirmEmail(event, confirmationUrl) {
        event.preventDefault(); // Prevent link from navigating away

        fetch(confirmationUrl, {
            method: 'GET', // Use GET request for confirmation
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Email confirmed successfully!");
                } else {
                    alert(data.message || "Invalid confirmation request.");
                }
            })
            .catch(error => {
                console.error("Error confirming email:", error);
                alert("An error occurred while confirming the email.");
            });
    }



</script>

}